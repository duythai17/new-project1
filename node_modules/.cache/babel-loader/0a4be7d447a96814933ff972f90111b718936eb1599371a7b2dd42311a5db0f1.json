{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { TranslatableString } from '@rjsf/utils';\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\n *\n * @param props - The `ErrorListProps` for this component\n */\nexport default function ErrorList(_ref) {\n  let {\n    errors,\n    registry\n  } = _ref;\n  const {\n    translateString\n  } = registry;\n  return _jsxs(\"div\", {\n    className: 'panel panel-danger errors',\n    children: [_jsx(\"div\", {\n      className: 'panel-heading',\n      children: _jsx(\"h3\", {\n        className: 'panel-title',\n        children: translateString(TranslatableString.ErrorsLabel)\n      })\n    }), _jsx(\"ul\", {\n      className: 'list-group',\n      children: errors.map((error, i) => {\n        return _jsx(\"li\", {\n          className: 'list-group-item text-danger',\n          children: error.stack\n        }, i);\n      })\n    })]\n  });\n}","map":{"version":3,"names":["TranslatableString","ErrorList","_ref","errors","registry","translateString","_jsxs","className","children","_jsx","ErrorsLabel","map","error","i","stack"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\core\\src\\components\\templates\\ErrorList.tsx"],"sourcesContent":["import {\n  ErrorListProps,\n  FormContextType,\n  RJSFValidationError,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\n\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\n *\n * @param props - The `ErrorListProps` for this component\n */\nexport default function ErrorList<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  errors,\n  registry,\n}: ErrorListProps<T, S, F>) {\n  const { translateString } = registry;\n  return (\n    <div className='panel panel-danger errors'>\n      <div className='panel-heading'>\n        <h3 className='panel-title'>{translateString(TranslatableString.ErrorsLabel)}</h3>\n      </div>\n      <ul className='list-group'>\n        {errors.map((error: RJSFValidationError, i: number) => {\n          return (\n            <li key={i} className='list-group-item text-danger'>\n              {error.stack}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";AAAA,SAMEA,kBAAkB,QACb,aAAa;AAEpB;;;;AAIA,eAAc,SAAUC,SAASA,CAAAC,IAAA,EAGP;EAAA,IAH2F;IACnHC,MAAM;IACNC;EAAQ,CACgB,GAAAF,IAAA;EACxB,MAAM;IAAEG;EAAe,CAAE,GAAGD,QAAQ;EACpC,OACEE,KAAA;IAAKC,SAAS,EAAC,2BAA2B;IAAAC,QAAA,GACxCC,IAAA;MAAKF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC5BC,IAAA;QAAIF,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEH,eAAe,CAACL,kBAAkB,CAACU,WAAW;MAAC;IAAM,EAC9E,EACND,IAAA;MAAIF,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBL,MAAM,CAACQ,GAAG,CAAC,CAACC,KAA0B,EAAEC,CAAS,KAAI;QACpD,OACEJ,IAAA;UAAYF,SAAS,EAAC,6BAA6B;UAAAC,QAAA,EAChDI,KAAK,CAACE;QAAK,GADLD,CAAC,CAEL;MAET,CAAC;IAAC,EACC;EAAA,EACD;AAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}