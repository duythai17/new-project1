{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport { ariaDescribedByIds } from '@rjsf/utils';\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction TextareaWidget(_ref) {\n  let {\n    id,\n    options = {},\n    placeholder,\n    value,\n    required,\n    disabled,\n    readonly,\n    autofocus = false,\n    onChange,\n    onBlur,\n    onFocus\n  } = _ref;\n  const handleChange = useCallback(_ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    return onChange(value === '' ? options.emptyValue : value);\n  }, [onChange, options.emptyValue]);\n  const handleBlur = useCallback(_ref3 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref3;\n    return onBlur(id, value);\n  }, [onBlur, id]);\n  const handleFocus = useCallback(_ref4 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref4;\n    return onFocus(id, value);\n  }, [id, onFocus]);\n  return _jsx(\"textarea\", {\n    id: id,\n    name: id,\n    className: 'form-control',\n    value: value ? value : '',\n    placeholder: placeholder,\n    required: required,\n    disabled: disabled,\n    readOnly: readonly,\n    autoFocus: autofocus,\n    rows: options.rows,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onChange: handleChange,\n    \"aria-describedby\": ariaDescribedByIds(id)\n  });\n}\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {}\n};\nexport default TextareaWidget;","map":{"version":3,"names":["useCallback","ariaDescribedByIds","TextareaWidget","_ref","id","options","placeholder","value","required","disabled","readonly","autofocus","onChange","onBlur","onFocus","handleChange","_ref2","target","emptyValue","handleBlur","_ref3","handleFocus","_ref4","_jsx","name","className","readOnly","autoFocus","rows","defaultProps"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\core\\src\\components\\widgets\\TextareaWidget.tsx"],"sourcesContent":["import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport { ariaDescribedByIds, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction TextareaWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  options = {},\n  placeholder,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const handleChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLTextAreaElement>) => onChange(value === '' ? options.emptyValue : value),\n    [onChange, options.emptyValue]\n  );\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onBlur(id, value),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onFocus(id, value),\n    [id, onFocus]\n  );\n\n  return (\n    <textarea\n      id={id}\n      name={id}\n      className='form-control'\n      value={value ? value : ''}\n      placeholder={placeholder}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      autoFocus={autofocus}\n      rows={options.rows}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    />\n  );\n}\n\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {},\n};\n\nexport default TextareaWidget;\n"],"mappings":";AAAA,SAAkCA,WAAW,QAAQ,OAAO;AAC5D,SAASC,kBAAkB,QAAoE,aAAa;AAE5G;;;;AAIA,SAASC,cAAcA,CAAAC,IAAA,EAYA;EAAA,IAZoF;IACzGC,EAAE;IACFC,OAAO,GAAG,EAAE;IACZC,WAAW;IACXC,KAAK;IACLC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,SAAS,GAAG,KAAK;IACjBC,QAAQ;IACRC,MAAM;IACNC;EAAO,CACc,GAAAX,IAAA;EACrB,MAAMY,YAAY,GAAGf,WAAW,CAC9BgB,KAAA;IAAA,IAAC;MAAEC,MAAM,EAAE;QAAEV;MAAK;IAAE,CAAoC,GAAAS,KAAA;IAAA,OAAKJ,QAAQ,CAACL,KAAK,KAAK,EAAE,GAAGF,OAAO,CAACa,UAAU,GAAGX,KAAK,CAAC;EAAA,GAChH,CAACK,QAAQ,EAAEP,OAAO,CAACa,UAAU,CAAC,CAC/B;EAED,MAAMC,UAAU,GAAGnB,WAAW,CAC5BoB,KAAA;IAAA,IAAC;MAAEH,MAAM,EAAE;QAAEV;MAAK;IAAE,CAAmC,GAAAa,KAAA;IAAA,OAAKP,MAAM,CAACT,EAAE,EAAEG,KAAK,CAAC;EAAA,GAC7E,CAACM,MAAM,EAAET,EAAE,CAAC,CACb;EAED,MAAMiB,WAAW,GAAGrB,WAAW,CAC7BsB,KAAA;IAAA,IAAC;MAAEL,MAAM,EAAE;QAAEV;MAAK;IAAE,CAAmC,GAAAe,KAAA;IAAA,OAAKR,OAAO,CAACV,EAAE,EAAEG,KAAK,CAAC;EAAA,GAC9E,CAACH,EAAE,EAAEU,OAAO,CAAC,CACd;EAED,OACES,IAAA;IACEnB,EAAE,EAAEA,EAAE;IACNoB,IAAI,EAAEpB,EAAE;IACRqB,SAAS,EAAC,cAAc;IACxBlB,KAAK,EAAEA,KAAK,GAAGA,KAAK,GAAG,EAAE;IACzBD,WAAW,EAAEA,WAAW;IACxBE,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA,QAAQ;IAClBiB,QAAQ,EAAEhB,QAAQ;IAClBiB,SAAS,EAAEhB,SAAS;IACpBiB,IAAI,EAAEvB,OAAO,CAACuB,IAAI;IAClBf,MAAM,EAAEM,UAAU;IAClBL,OAAO,EAAEO,WAAW;IACpBT,QAAQ,EAAEG,YAAY;IAAA,oBACJd,kBAAkB,CAAIG,EAAE;EAAC,EAC3C;AAEN;AAEAF,cAAc,CAAC2B,YAAY,GAAG;EAC5BlB,SAAS,EAAE,KAAK;EAChBN,OAAO,EAAE;CACV;AAED,eAAeH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}