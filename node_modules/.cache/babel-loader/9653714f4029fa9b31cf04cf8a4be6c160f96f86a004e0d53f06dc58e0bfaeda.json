{"ast":null,"code":"import { CONST_KEY, ENUM_KEY } from './constants';\n/** Returns the constant value from the schema when it is either a single value enum or has a const key. Otherwise\n * throws an error.\n *\n * @param schema - The schema from which to obtain the constant value\n * @returns - The constant value for the schema\n * @throws - Error when the schema does not have a constant value\n */\nexport default function toConstant(schema) {\n  if (ENUM_KEY in schema && Array.isArray(schema.enum) && schema.enum.length === 1) {\n    return schema.enum[0];\n  }\n  if (CONST_KEY in schema) {\n    return schema.const;\n  }\n  throw new Error('schema cannot be inferred as a constant');\n}","map":{"version":3,"names":["CONST_KEY","ENUM_KEY","toConstant","schema","Array","isArray","enum","length","const","Error"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\utils\\src\\toConstant.ts"],"sourcesContent":["import { CONST_KEY, ENUM_KEY } from './constants';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Returns the constant value from the schema when it is either a single value enum or has a const key. Otherwise\n * throws an error.\n *\n * @param schema - The schema from which to obtain the constant value\n * @returns - The constant value for the schema\n * @throws - Error when the schema does not have a constant value\n */\nexport default function toConstant<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  if (ENUM_KEY in schema && Array.isArray(schema.enum) && schema.enum.length === 1) {\n    return schema.enum[0];\n  }\n  if (CONST_KEY in schema) {\n    return schema.const;\n  }\n  throw new Error('schema cannot be inferred as a constant');\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,aAAa;AAGjD;;;;;;;AAOA,eAAc,SAAUC,UAAUA,CAA0CC,MAAS;EACnF,IAAIF,QAAQ,IAAIE,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACF,MAAM,CAACG,IAAI,CAAC,IAAIH,MAAM,CAACG,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IAChF,OAAOJ,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC;;EAEvB,IAAIN,SAAS,IAAIG,MAAM,EAAE;IACvB,OAAOA,MAAM,CAACK,KAAK;;EAErB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}