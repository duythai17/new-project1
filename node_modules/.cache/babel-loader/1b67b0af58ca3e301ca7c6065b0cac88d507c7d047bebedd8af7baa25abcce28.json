{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs\\\\my-app\\\\src\\\\components\\\\MongoDataComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './MongoDataComponent.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MongoDataComponent = () => {\n  _s();\n  const [weightData, setWeightData] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('https://ap-southeast-1.aws.data.mongodb-api.com/app/data-fmace/endpoint/get_updatedvalue');\n      setWeightData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const startPolling = () => {\n    const pollingInterval = setInterval(fetchData, 5000); // Adjust the interval as needed (e.g., 5000 for every 5 seconds)\n    return () => clearInterval(pollingInterval);\n  };\n  useEffect(() => {\n    fetchData(); // Fetch data when the component mounts\n    const stopPolling = startPolling(); // Start polling\n\n    return () => {\n      stopPolling(); // Stop polling when the component is unmounted\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weight-data-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"weight-data-title\",\n      children: \"Weight Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), weightData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"weight-data-list\",\n      children: weightData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.weight, \" gram\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-data-message\",\n      children: \"No weight data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MongoDataComponent, \"EDsvNpUn0RaWFcqaZYKbOL1ivwg=\");\n_c = MongoDataComponent;\nexport default MongoDataComponent;\nvar _c;\n$RefreshReg$(_c, \"MongoDataComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MongoDataComponent","_s","weightData","setWeightData","fetchData","response","get","data","error","console","startPolling","pollingInterval","setInterval","clearInterval","stopPolling","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","weight","_c","$RefreshReg$"],"sources":["D:/Reactjs/my-app/src/components/MongoDataComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './MongoDataComponent.css'; // Import your CSS file for styling\r\n\r\nconst MongoDataComponent = () => {\r\n  const [weightData, setWeightData] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get('https://ap-southeast-1.aws.data.mongodb-api.com/app/data-fmace/endpoint/get_updatedvalue');\r\n      setWeightData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const startPolling = () => {\r\n    const pollingInterval = setInterval(fetchData, 5000); // Adjust the interval as needed (e.g., 5000 for every 5 seconds)\r\n    return () => clearInterval(pollingInterval);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Fetch data when the component mounts\r\n    const stopPolling = startPolling(); // Start polling\r\n\r\n    return () => {\r\n      stopPolling(); // Stop polling when the component is unmounted\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"weight-data-container\">\r\n      <h1 className=\"weight-data-title\">Weight Data</h1>\r\n      {weightData.length > 0 ? (\r\n        <ul className=\"weight-data-list\">\r\n          {weightData.map((item, index) => (\r\n            <li key={index}>{item.weight} gram</li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"no-data-message\">No weight data available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MongoDataComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,0FAA0F,CAAC;MAC5HH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,eAAe,GAAGC,WAAW,CAACR,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;IACtD,OAAO,MAAMS,aAAa,CAACF,eAAe,CAAC;EAC7C,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,CAAC,CAAC,CAAC;IACb,MAAMU,WAAW,GAAGJ,YAAY,CAAC,CAAC,CAAC,CAAC;;IAEpC,OAAO,MAAM;MACXI,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKgB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCjB,OAAA;MAAIgB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjDlB,UAAU,CAACmB,MAAM,GAAG,CAAC,gBACpBtB,OAAA;MAAIgB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC7Bd,UAAU,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BzB,OAAA;QAAAiB,QAAA,GAAiBO,IAAI,CAACE,MAAM,EAAC,OAAK;MAAA,GAAzBD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELrB,OAAA;MAAGgB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAxCID,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AA0CxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}