{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\validator-ajv8\\src\\types.ts"],"sourcesContent":["import Ajv, { Options, ErrorObject } from 'ajv';\nimport { FormatsPluginOptions } from 'ajv-formats';\n\n/** The type describing how to customize the AJV6 validator\n */\nexport interface CustomValidatorOptionsType {\n  /** The list of additional meta schemas that the validator can access */\n  additionalMetaSchemas?: ReadonlyArray<object>;\n  /** The set of additional custom formats that the validator will support */\n  customFormats?: {\n    [k: string]: string | RegExp | ((data: string) => boolean);\n  };\n  /** The set of config overrides that will be passed to the AJV validator constructor on top of the defaults */\n  ajvOptionsOverrides?: Options;\n  /** The `ajv-format` options to use when adding formats to `ajv`; pass `false` to disable it */\n  ajvFormatOptions?: FormatsPluginOptions | false;\n  /** The AJV class to construct */\n  AjvClass?: typeof Ajv;\n}\n\n/** The type describing a function that takes a list of Ajv `ErrorObject`s and localizes them\n */\nexport type Localizer = (errors?: null | ErrorObject[]) => void;\n\n/** This is a simplification of the `ValidateFunction` type provided by the AJV validator down to its minimal form so\n * that the code still works properly with precompiled validator functions generated by the AJV standalone code\n * compilation but does not rely on any of the internal AJV types which causes Typescript issue for library consumers\n */\nexport interface CompiledValidateFunction {\n  /** The errors produced by the precompiled validator */\n  errors?: null | ErrorObject[];\n  /** This is simplified version of a `ValidateFunction` type definition which describes the interface that our\n   * precompiled validator will call.\n   */\n  (this: Ajv | any, data: any): boolean;\n}\n\n/** The definition of precompiled validator functions\n */\nexport type ValidatorFunctions = { [key: string]: CompiledValidateFunction };\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}