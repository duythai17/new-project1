{"ast":null,"code":"import isObject from './isObject';\n/** Recursively merge deeply nested objects.\n *\n * @param obj1 - The first object to merge\n * @param obj2 - The second object to merge\n * @param [concatArrays=false] - Optional flag that, when true, will cause arrays to be concatenated. Use\n *          \"preventDuplicates\" to merge arrays in a manner that prevents any duplicate entries from being merged.\n *          NOTE: Uses shallow comparison for the duplicate checking.\n * @returns - A new object that is the merge of the two given objects\n */\nexport default function mergeObjects(obj1, obj2, concatArrays = false) {\n  return Object.keys(obj2).reduce((acc, key) => {\n    const left = obj1 ? obj1[key] : {},\n      right = obj2[key];\n    if (obj1 && key in obj1 && isObject(right)) {\n      acc[key] = mergeObjects(left, right, concatArrays);\n    } else if (concatArrays && Array.isArray(left) && Array.isArray(right)) {\n      let toMerge = right;\n      if (concatArrays === 'preventDuplicates') {\n        toMerge = right.reduce((result, value) => {\n          if (!left.includes(value)) {\n            result.push(value);\n          }\n          return result;\n        }, []);\n      }\n      acc[key] = left.concat(toMerge);\n    } else {\n      acc[key] = right;\n    }\n    return acc;\n  }, Object.assign({}, obj1)); // Prevent mutation of source object.\n}","map":{"version":3,"names":["isObject","mergeObjects","obj1","obj2","concatArrays","Object","keys","reduce","acc","key","left","right","Array","isArray","toMerge","result","value","includes","push","concat","assign"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\utils\\src\\mergeObjects.ts"],"sourcesContent":["import isObject from './isObject';\nimport { GenericObjectType } from './types';\n\n/** Recursively merge deeply nested objects.\n *\n * @param obj1 - The first object to merge\n * @param obj2 - The second object to merge\n * @param [concatArrays=false] - Optional flag that, when true, will cause arrays to be concatenated. Use\n *          \"preventDuplicates\" to merge arrays in a manner that prevents any duplicate entries from being merged.\n *          NOTE: Uses shallow comparison for the duplicate checking.\n * @returns - A new object that is the merge of the two given objects\n */\nexport default function mergeObjects(\n  obj1: GenericObjectType,\n  obj2: GenericObjectType,\n  concatArrays: boolean | 'preventDuplicates' = false\n) {\n  return Object.keys(obj2).reduce((acc, key) => {\n    const left = obj1 ? obj1[key] : {},\n      right = obj2[key];\n    if (obj1 && key in obj1 && isObject(right)) {\n      acc[key] = mergeObjects(left, right, concatArrays);\n    } else if (concatArrays && Array.isArray(left) && Array.isArray(right)) {\n      let toMerge = right;\n      if (concatArrays === 'preventDuplicates') {\n        toMerge = right.reduce((result, value) => {\n          if (!left.includes(value)) {\n            result.push(value);\n          }\n          return result;\n        }, []);\n      }\n      acc[key] = left.concat(toMerge);\n    } else {\n      acc[key] = right;\n    }\n    return acc;\n  }, Object.assign({}, obj1)); // Prevent mutation of source object.\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAGjC;;;;;;;;;AASA,eAAc,SAAUC,YAAYA,CAClCC,IAAuB,EACvBC,IAAuB,EACvBC,YAAA,GAA8C,KAAK;EAEnD,OAAOC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAI;IAC3C,MAAMC,IAAI,GAAGR,IAAI,GAAGA,IAAI,CAACO,GAAG,CAAC,GAAG,EAAE;MAChCE,KAAK,GAAGR,IAAI,CAACM,GAAG,CAAC;IACnB,IAAIP,IAAI,IAAIO,GAAG,IAAIP,IAAI,IAAIF,QAAQ,CAACW,KAAK,CAAC,EAAE;MAC1CH,GAAG,CAACC,GAAG,CAAC,GAAGR,YAAY,CAACS,IAAI,EAAEC,KAAK,EAAEP,YAAY,CAAC;KACnD,MAAM,IAAIA,YAAY,IAAIQ,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,IAAIE,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACtE,IAAIG,OAAO,GAAGH,KAAK;MACnB,IAAIP,YAAY,KAAK,mBAAmB,EAAE;QACxCU,OAAO,GAAGH,KAAK,CAACJ,MAAM,CAAC,CAACQ,MAAM,EAAEC,KAAK,KAAI;UACvC,IAAI,CAACN,IAAI,CAACO,QAAQ,CAACD,KAAK,CAAC,EAAE;YACzBD,MAAM,CAACG,IAAI,CAACF,KAAK,CAAC;;UAEpB,OAAOD,MAAM;QACf,CAAC,EAAE,EAAE,CAAC;;MAERP,GAAG,CAACC,GAAG,CAAC,GAAGC,IAAI,CAACS,MAAM,CAACL,OAAO,CAAC;KAChC,MAAM;MACLN,GAAG,CAACC,GAAG,CAAC,GAAGE,KAAK;;IAElB,OAAOH,GAAG;EACZ,CAAC,EAAEH,MAAM,CAACe,MAAM,CAAC,EAAE,EAAElB,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}