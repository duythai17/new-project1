{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { getTemplate, getUiOptions } from '@rjsf/utils';\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate(props) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title\n  } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate('ArrayFieldDescriptionTemplate', registry, uiOptions);\n  const ArrayFieldItemTemplate = getTemplate('ArrayFieldItemTemplate', registry, uiOptions);\n  const ArrayFieldTitleTemplate = getTemplate('ArrayFieldTitleTemplate', registry, uiOptions);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: {\n      AddButton\n    }\n  } = registry.templates;\n  return _jsxs(\"fieldset\", {\n    className: className,\n    id: idSchema.$id,\n    children: [_jsx(ArrayFieldTitleTemplate, {\n      idSchema: idSchema,\n      title: uiOptions.title || title,\n      required: required,\n      schema: schema,\n      uiSchema: uiSchema,\n      registry: registry\n    }), _jsx(ArrayFieldDescriptionTemplate, {\n      idSchema: idSchema,\n      description: uiOptions.description || schema.description,\n      schema: schema,\n      uiSchema: uiSchema,\n      registry: registry\n    }), _jsx(\"div\", {\n      className: 'row array-item-list',\n      children: items && items.map(({\n        key,\n        ...itemProps\n      }) => _jsx(ArrayFieldItemTemplate, {\n        ...itemProps\n      }, key))\n    }), canAdd && _jsx(AddButton, {\n      className: 'array-item-add',\n      onClick: onAddClick,\n      disabled: disabled || readonly,\n      uiSchema: uiSchema,\n      registry: registry\n    })]\n  });\n}","map":{"version":3,"names":["getTemplate","getUiOptions","ArrayFieldTemplate","props","canAdd","className","disabled","idSchema","uiSchema","items","onAddClick","readonly","registry","required","schema","title","uiOptions","ArrayFieldDescriptionTemplate","ArrayFieldItemTemplate","ArrayFieldTitleTemplate","ButtonTemplates","AddButton","templates","_jsxs","id","$id","children","_jsx","description","map","key","itemProps","onClick"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\core\\src\\components\\templates\\ArrayFieldTemplate.tsx"],"sourcesContent":["import {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateProps,\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<'ArrayFieldDescriptionTemplate', T, S, F>(\n    'ArrayFieldDescriptionTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldItemTemplate = getTemplate<'ArrayFieldItemTemplate', T, S, F>(\n    'ArrayFieldItemTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<'ArrayFieldTitleTemplate', T, S, F>(\n    'ArrayFieldTitleTemplate',\n    registry,\n    uiOptions\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset className={className} id={idSchema.$id}>\n      <ArrayFieldTitleTemplate\n        idSchema={idSchema}\n        title={uiOptions.title || title}\n        required={required}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={idSchema}\n        description={uiOptions.description || schema.description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <div className='row array-item-list'>\n        {items &&\n          items.map(({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n            <ArrayFieldItemTemplate key={key} {...itemProps} />\n          ))}\n      </div>\n      {canAdd && (\n        <AddButton\n          className='array-item-add'\n          onClick={onAddClick}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n"],"mappings":";AAAA,SACEA,WAAW,EACXC,YAAY,QAMP,aAAa;AAEpB;;;;AAIA,eAAc,SAAUC,kBAAkBA,CAIxCC,KAAuC;EACvC,MAAM;IACJC,MAAM;IACNC,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,KAAK;IACLC,UAAU;IACVC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,MAAM;IACNC;EAAK,CACN,GAAGZ,KAAK;EACT,MAAMa,SAAS,GAAGf,YAAY,CAAUO,QAAQ,CAAC;EACjD,MAAMS,6BAA6B,GAAGjB,WAAW,CAC/C,+BAA+B,EAC/BY,QAAQ,EACRI,SAAS,CACV;EACD,MAAME,sBAAsB,GAAGlB,WAAW,CACxC,wBAAwB,EACxBY,QAAQ,EACRI,SAAS,CACV;EACD,MAAMG,uBAAuB,GAAGnB,WAAW,CACzC,yBAAyB,EACzBY,QAAQ,EACRI,SAAS,CACV;EACD;EACA,MAAM;IACJI,eAAe,EAAE;MAAEC;IAAS;EAAE,CAC/B,GAAGT,QAAQ,CAACU,SAAS;EACtB,OACEC,KAAA;IAAUlB,SAAS,EAAEA,SAAS;IAAEmB,EAAE,EAAEjB,QAAQ,CAACkB,GAAG;IAAAC,QAAA,GAC9CC,IAAA,CAACR,uBAAuB;MACtBZ,QAAQ,EAAEA,QAAQ;MAClBQ,KAAK,EAAEC,SAAS,CAACD,KAAK,IAAIA,KAAK;MAC/BF,QAAQ,EAAEA,QAAQ;MAClBC,MAAM,EAAEA,MAAM;MACdN,QAAQ,EAAEA,QAAQ;MAClBI,QAAQ,EAAEA;IAAQ,EAClB,EACFe,IAAA,CAACV,6BAA6B;MAC5BV,QAAQ,EAAEA,QAAQ;MAClBqB,WAAW,EAAEZ,SAAS,CAACY,WAAW,IAAId,MAAM,CAACc,WAAW;MACxDd,MAAM,EAAEA,MAAM;MACdN,QAAQ,EAAEA,QAAQ;MAClBI,QAAQ,EAAEA;IAAQ,EAClB,EACFe,IAAA;MAAKtB,SAAS,EAAC,qBAAqB;MAAAqB,QAAA,EACjCjB,KAAK,IACJA,KAAK,CAACoB,GAAG,CAAC,CAAC;QAAEC,GAAG;QAAE,GAAGC;MAAS,CAAuC,KACnEJ,IAAA,CAACT,sBAAsB;QAAA,GAAea;MAAS,GAAlBD,GAAG,CACjC;IAAC,EACA,EACL1B,MAAM,IACLuB,IAAA,CAACN,SAAS;MACRhB,SAAS,EAAC,gBAAgB;MAC1B2B,OAAO,EAAEtB,UAAU;MACnBJ,QAAQ,EAAEA,QAAQ,IAAIK,QAAQ;MAC9BH,QAAQ,EAAEA,QAAQ;MAClBI,QAAQ,EAAEA;IAAQ,EAErB;EAAA,EACQ;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}