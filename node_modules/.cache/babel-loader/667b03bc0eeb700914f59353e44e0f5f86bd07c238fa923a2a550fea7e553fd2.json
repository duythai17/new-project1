{"ast":null,"code":"import isSelect from './isSelect';\n/** Checks to see if the `schema` combination represents a multi-select\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param schema - The schema for which check for a multi-select flag is desired\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @returns - True if schema contains a multi-select, otherwise false\n */\nexport default function isMultiSelect(validator, schema, rootSchema) {\n  if (!schema.uniqueItems || !schema.items || typeof schema.items === 'boolean') {\n    return false;\n  }\n  return isSelect(validator, schema.items, rootSchema);\n}","map":{"version":3,"names":["isSelect","isMultiSelect","validator","schema","rootSchema","uniqueItems","items"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\utils\\src\\schema\\isMultiSelect.ts"],"sourcesContent":["import { FormContextType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\n\nimport isSelect from './isSelect';\n\n/** Checks to see if the `schema` combination represents a multi-select\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param schema - The schema for which check for a multi-select flag is desired\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @returns - True if schema contains a multi-select, otherwise false\n */\nexport default function isMultiSelect<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(validator: ValidatorType<T, S, F>, schema: S, rootSchema?: S) {\n  if (!schema.uniqueItems || !schema.items || typeof schema.items === 'boolean') {\n    return false;\n  }\n  return isSelect<T, S, F>(validator, schema.items as S, rootSchema);\n}\n"],"mappings":"AAEA,OAAOA,QAAQ,MAAM,YAAY;AAEjC;;;;;;;AAOA,eAAc,SAAUC,aAAaA,CAInCC,SAAiC,EAAEC,MAAS,EAAEC,UAAc;EAC5D,IAAI,CAACD,MAAM,CAACE,WAAW,IAAI,CAACF,MAAM,CAACG,KAAK,IAAI,OAAOH,MAAM,CAACG,KAAK,KAAK,SAAS,EAAE;IAC7E,OAAO,KAAK;;EAEd,OAAON,QAAQ,CAAUE,SAAS,EAAEC,MAAM,CAACG,KAAU,EAAEF,UAAU,CAAC;AACpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}