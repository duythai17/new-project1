{"ast":null,"code":"import { CONST_KEY } from './constants';\n/** This function checks if the given `schema` matches a single constant value. This happens when either the schema has\n * an `enum` array with a single value or there is a `const` defined.\n *\n * @param schema - The schema for a field\n * @returns - True if the `schema` has a single constant value, false otherwise\n */\nexport default function isConstant(schema) {\n  return Array.isArray(schema.enum) && schema.enum.length === 1 || CONST_KEY in schema;\n}","map":{"version":3,"names":["CONST_KEY","isConstant","schema","Array","isArray","enum","length"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\utils\\src\\isConstant.ts"],"sourcesContent":["import { CONST_KEY } from './constants';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** This function checks if the given `schema` matches a single constant value. This happens when either the schema has\n * an `enum` array with a single value or there is a `const` defined.\n *\n * @param schema - The schema for a field\n * @returns - True if the `schema` has a single constant value, false otherwise\n */\nexport default function isConstant<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  return (Array.isArray(schema.enum) && schema.enum.length === 1) || CONST_KEY in schema;\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AAGvC;;;;;;AAMA,eAAc,SAAUC,UAAUA,CAA0CC,MAAS;EACnF,OAAQC,KAAK,CAACC,OAAO,CAACF,MAAM,CAACG,IAAI,CAAC,IAAIH,MAAM,CAACG,IAAI,CAACC,MAAM,KAAK,CAAC,IAAKN,SAAS,IAAIE,MAAM;AACxF"},"metadata":{},"sourceType":"module","externalDependencies":[]}