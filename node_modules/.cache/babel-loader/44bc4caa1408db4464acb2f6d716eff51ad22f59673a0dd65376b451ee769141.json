{"ast":null,"code":"/** Extracts the range spec information `{ step?: number, min?: number, max?: number }` that can be spread onto an HTML\n * input from the range analog in the schema `{ multipleOf?: number, minimum?: number, maximum?: number }`.\n *\n * @param schema - The schema from which to extract the range spec\n * @returns - A range specification from the schema\n */\nexport default function rangeSpec(schema) {\n  const spec = {};\n  if (schema.multipleOf) {\n    spec.step = schema.multipleOf;\n  }\n  if (schema.minimum || schema.minimum === 0) {\n    spec.min = schema.minimum;\n  }\n  if (schema.maximum || schema.maximum === 0) {\n    spec.max = schema.maximum;\n  }\n  return spec;\n}","map":{"version":3,"names":["rangeSpec","schema","spec","multipleOf","step","minimum","min","maximum","max"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\utils\\src\\rangeSpec.ts"],"sourcesContent":["import { RangeSpecType, StrictRJSFSchema } from './types';\nimport { RJSFSchema } from './types';\n\n/** Extracts the range spec information `{ step?: number, min?: number, max?: number }` that can be spread onto an HTML\n * input from the range analog in the schema `{ multipleOf?: number, minimum?: number, maximum?: number }`.\n *\n * @param schema - The schema from which to extract the range spec\n * @returns - A range specification from the schema\n */\nexport default function rangeSpec<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  const spec: RangeSpecType = {};\n  if (schema.multipleOf) {\n    spec.step = schema.multipleOf;\n  }\n  if (schema.minimum || schema.minimum === 0) {\n    spec.min = schema.minimum;\n  }\n  if (schema.maximum || schema.maximum === 0) {\n    spec.max = schema.maximum;\n  }\n  return spec;\n}\n"],"mappings":"AAGA;;;;;;AAMA,eAAc,SAAUA,SAASA,CAA0CC,MAAS;EAClF,MAAMC,IAAI,GAAkB,EAAE;EAC9B,IAAID,MAAM,CAACE,UAAU,EAAE;IACrBD,IAAI,CAACE,IAAI,GAAGH,MAAM,CAACE,UAAU;;EAE/B,IAAIF,MAAM,CAACI,OAAO,IAAIJ,MAAM,CAACI,OAAO,KAAK,CAAC,EAAE;IAC1CH,IAAI,CAACI,GAAG,GAAGL,MAAM,CAACI,OAAO;;EAE3B,IAAIJ,MAAM,CAACM,OAAO,IAAIN,MAAM,CAACM,OAAO,KAAK,CAAC,EAAE;IAC1CL,IAAI,CAACM,GAAG,GAAGP,MAAM,CAACM,OAAO;;EAE3B,OAAOL,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}