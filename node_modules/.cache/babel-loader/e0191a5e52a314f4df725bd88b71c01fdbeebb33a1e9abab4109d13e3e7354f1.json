{"ast":null,"code":"/** Returns a string representation of the `num` that is padded with leading \"0\"s if necessary\n *\n * @param num - The number to pad\n * @param width - The width of the string at which no lead padding is necessary\n * @returns - The number converted to a string with leading zero padding if the number of digits is less than `width`\n */\nexport default function pad(num, width) {\n  let s = String(num);\n  while (s.length < width) {\n    s = '0' + s;\n  }\n  return s;\n}","map":{"version":3,"names":["pad","num","width","s","String","length"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\utils\\src\\pad.ts"],"sourcesContent":["/** Returns a string representation of the `num` that is padded with leading \"0\"s if necessary\n *\n * @param num - The number to pad\n * @param width - The width of the string at which no lead padding is necessary\n * @returns - The number converted to a string with leading zero padding if the number of digits is less than `width`\n */\nexport default function pad(num: number, width: number) {\n  let s = String(num);\n  while (s.length < width) {\n    s = '0' + s;\n  }\n  return s;\n}\n"],"mappings":"AAAA;;;;;;AAMA,eAAc,SAAUA,GAAGA,CAACC,GAAW,EAAEC,KAAa;EACpD,IAAIC,CAAC,GAAGC,MAAM,CAACH,GAAG,CAAC;EACnB,OAAOE,CAAC,CAACE,MAAM,GAAGH,KAAK,EAAE;IACvBC,CAAC,GAAG,GAAG,GAAGA,CAAC;;EAEb,OAAOA,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}