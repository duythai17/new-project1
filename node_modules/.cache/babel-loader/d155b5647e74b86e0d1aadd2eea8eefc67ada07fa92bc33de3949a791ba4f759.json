{"ast":null,"code":"import isObject from './isObject';\n/** Checks the schema to see if it is allowing additional items, by verifying that `schema.additionalItems` is an\n * object. The user is warned in the console if `schema.additionalItems` has the value `true`.\n *\n * @param schema - The schema object to check\n * @returns - True if additional items is allowed, otherwise false\n */\nexport default function allowAdditionalItems(schema) {\n  if (schema.additionalItems === true) {\n    console.warn('additionalItems=true is currently not supported');\n  }\n  return isObject(schema.additionalItems);\n}","map":{"version":3,"names":["isObject","allowAdditionalItems","schema","additionalItems","console","warn"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\utils\\src\\allowAdditionalItems.ts"],"sourcesContent":["import isObject from './isObject';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Checks the schema to see if it is allowing additional items, by verifying that `schema.additionalItems` is an\n * object. The user is warned in the console if `schema.additionalItems` has the value `true`.\n *\n * @param schema - The schema object to check\n * @returns - True if additional items is allowed, otherwise false\n */\nexport default function allowAdditionalItems<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  if (schema.additionalItems === true) {\n    console.warn('additionalItems=true is currently not supported');\n  }\n  return isObject(schema.additionalItems);\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAGjC;;;;;;AAMA,eAAc,SAAUC,oBAAoBA,CAA0CC,MAAS;EAC7F,IAAIA,MAAM,CAACC,eAAe,KAAK,IAAI,EAAE;IACnCC,OAAO,CAACC,IAAI,CAAC,iDAAiD,CAAC;;EAEjE,OAAOL,QAAQ,CAACE,MAAM,CAACC,eAAe,CAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}