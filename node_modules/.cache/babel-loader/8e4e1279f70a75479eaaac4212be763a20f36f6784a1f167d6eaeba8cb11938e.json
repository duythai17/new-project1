{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reactjs\\\\my-app\\\\src\\\\components\\\\Snowflake.js\",\n  _s = $RefreshSig$();\n// Snowflake.js\nimport React, { useEffect, useRef } from 'react';\nimport './Snowflake.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Snowflake = () => {\n  _s();\n  const snowflakeRef = useRef(null);\n  useEffect(() => {\n    const startPositionX = Math.random() * window.innerWidth;\n    const rotation = Math.random() * 360;\n    const initialTop = -10; // Đặt giá trị top để bắt đầu từ trên đầu màn hình\n    const speed = Math.random() * 2 + 1;\n    snowflakeRef.current.style.top = `${initialTop}px`; // Đặt giá trị top ban đầu\n\n    const animateSnowflake = () => {\n      const currentY = snowflakeRef.current.getBoundingClientRect().top;\n      if (currentY < window.innerHeight) {\n        snowflakeRef.current.style.top = `${currentY + speed}px`;\n        requestAnimationFrame(animateSnowflake);\n      } else {\n        // Nếu bông tuyết rơi xuống cuối trang, tái tạo nó ở trên và chọn vị trí ngẫu nhiên\n        snowflakeRef.current.style.top = `${initialTop}px`; // Đặt lại giá trị top ban đầu\n        snowflakeRef.current.style.left = `${Math.random() * window.innerWidth}px`;\n\n        // Thêm độ trễ trước khi tái tạo để giảm tải\n        setTimeout(() => {\n          animateSnowflake();\n        }, 2000);\n      }\n    };\n    snowflakeRef.current.style.left = `${startPositionX}px`;\n    snowflakeRef.current.style.transform = `rotate(${rotation}deg)`;\n    animateSnowflake();\n  }, []); // Thêm [] để chỉ gọi useEffect khi component được mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: snowflakeRef,\n    className: \"snowflake\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n_s(Snowflake, \"mx754bTqgTG0af4KhH00AVFSxOM=\");\n_c = Snowflake;\nexport default Snowflake;\nvar _c;\n$RefreshReg$(_c, \"Snowflake\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Snowflake","_s","snowflakeRef","startPositionX","Math","random","window","innerWidth","rotation","initialTop","speed","current","style","top","animateSnowflake","currentY","getBoundingClientRect","innerHeight","requestAnimationFrame","left","setTimeout","transform","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Reactjs/my-app/src/components/Snowflake.js"],"sourcesContent":["// Snowflake.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport './Snowflake.css';\r\n\r\nconst Snowflake = () => {\r\n  const snowflakeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const startPositionX = Math.random() * window.innerWidth;\r\n    const rotation = Math.random() * 360;\r\n    const initialTop = -10; // Đặt giá trị top để bắt đầu từ trên đầu màn hình\r\n    const speed = Math.random() * 2 + 1;\r\n\r\n    snowflakeRef.current.style.top = `${initialTop}px`; // Đặt giá trị top ban đầu\r\n\r\n    const animateSnowflake = () => {\r\n      const currentY = snowflakeRef.current.getBoundingClientRect().top;\r\n\r\n      if (currentY < window.innerHeight) {\r\n        snowflakeRef.current.style.top = `${currentY + speed}px`;\r\n        requestAnimationFrame(animateSnowflake);\r\n      } else {\r\n        // Nếu bông tuyết rơi xuống cuối trang, tái tạo nó ở trên và chọn vị trí ngẫu nhiên\r\n        snowflakeRef.current.style.top = `${initialTop}px`; // Đặt lại giá trị top ban đầu\r\n        snowflakeRef.current.style.left = `${Math.random() * window.innerWidth}px`;\r\n\r\n        // Thêm độ trễ trước khi tái tạo để giảm tải\r\n        setTimeout(() => {\r\n          animateSnowflake();\r\n        }, 2000);\r\n      }\r\n    };\r\n\r\n    snowflakeRef.current.style.left = `${startPositionX}px`;\r\n    snowflakeRef.current.style.transform = `rotate(${rotation}deg)`;\r\n\r\n    animateSnowflake();\r\n  }, []); // Thêm [] để chỉ gọi useEffect khi component được mount\r\n\r\n  return <div ref={snowflakeRef} className=\"snowflake\" />;\r\n};\r\n\r\nexport default Snowflake;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,YAAY,GAAGL,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMO,cAAc,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACC,UAAU;IACxD,MAAMC,QAAQ,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;IACpC,MAAMI,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC;IACxB,MAAMC,KAAK,GAAGN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IAEnCH,YAAY,CAACS,OAAO,CAACC,KAAK,CAACC,GAAG,GAAI,GAAEJ,UAAW,IAAG,CAAC,CAAC;;IAEpD,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMC,QAAQ,GAAGb,YAAY,CAACS,OAAO,CAACK,qBAAqB,CAAC,CAAC,CAACH,GAAG;MAEjE,IAAIE,QAAQ,GAAGT,MAAM,CAACW,WAAW,EAAE;QACjCf,YAAY,CAACS,OAAO,CAACC,KAAK,CAACC,GAAG,GAAI,GAAEE,QAAQ,GAAGL,KAAM,IAAG;QACxDQ,qBAAqB,CAACJ,gBAAgB,CAAC;MACzC,CAAC,MAAM;QACL;QACAZ,YAAY,CAACS,OAAO,CAACC,KAAK,CAACC,GAAG,GAAI,GAAEJ,UAAW,IAAG,CAAC,CAAC;QACpDP,YAAY,CAACS,OAAO,CAACC,KAAK,CAACO,IAAI,GAAI,GAAEf,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACC,UAAW,IAAG;;QAE1E;QACAa,UAAU,CAAC,MAAM;UACfN,gBAAgB,CAAC,CAAC;QACpB,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC;IAEDZ,YAAY,CAACS,OAAO,CAACC,KAAK,CAACO,IAAI,GAAI,GAAEhB,cAAe,IAAG;IACvDD,YAAY,CAACS,OAAO,CAACC,KAAK,CAACS,SAAS,GAAI,UAASb,QAAS,MAAK;IAE/DM,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAOf,OAAA;IAAKuB,GAAG,EAAEpB,YAAa;IAACqB,SAAS,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;AAAC1B,EAAA,CApCID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}