{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { canExpand, descriptionId, getTemplate, getUiOptions, titleId } from '@rjsf/utils';\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\n * the properties.\n *\n * @param props - The `ObjectFieldTemplateProps` for this component\n */\nexport default function ObjectFieldTemplate(props) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema\n  } = props;\n  const options = getUiOptions(uiSchema);\n  const TitleFieldTemplate = getTemplate('TitleFieldTemplate', registry, options);\n  const DescriptionFieldTemplate = getTemplate('DescriptionFieldTemplate', registry, options);\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: {\n      AddButton\n    }\n  } = registry.templates;\n  return _jsxs(\"fieldset\", {\n    id: idSchema.$id,\n    children: [title && _jsx(TitleFieldTemplate, {\n      id: titleId(idSchema),\n      title: title,\n      required: required,\n      schema: schema,\n      uiSchema: uiSchema,\n      registry: registry\n    }), description && _jsx(DescriptionFieldTemplate, {\n      id: descriptionId(idSchema),\n      description: description,\n      schema: schema,\n      uiSchema: uiSchema,\n      registry: registry\n    }), properties.map(prop => prop.content), canExpand(schema, uiSchema, formData) && _jsx(AddButton, {\n      className: 'object-property-expand',\n      onClick: onAddClick(schema),\n      disabled: disabled || readonly,\n      uiSchema: uiSchema,\n      registry: registry\n    })]\n  });\n}","map":{"version":3,"names":["canExpand","descriptionId","getTemplate","getUiOptions","titleId","ObjectFieldTemplate","props","description","disabled","formData","idSchema","onAddClick","properties","readonly","registry","required","schema","title","uiSchema","options","TitleFieldTemplate","DescriptionFieldTemplate","ButtonTemplates","AddButton","templates","_jsxs","id","$id","children","_jsx","map","prop","content","className","onClick"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\core\\src\\components\\templates\\ObjectFieldTemplate.tsx"],"sourcesContent":["import {\n  FormContextType,\n  ObjectFieldTemplatePropertyType,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  canExpand,\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  titleId,\n} from '@rjsf/utils';\n\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\n * the properties.\n *\n * @param props - The `ObjectFieldTemplateProps` for this component\n */\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema,\n  } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<'TitleFieldTemplate', T, S, F>('TitleFieldTemplate', registry, options);\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset id={idSchema.$id}>\n      {title && (\n        <TitleFieldTemplate\n          id={titleId<T>(idSchema)}\n          title={title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {description && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(idSchema)}\n          description={description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {properties.map((prop: ObjectFieldTemplatePropertyType) => prop.content)}\n      {canExpand<T, S, F>(schema, uiSchema, formData) && (\n        <AddButton\n          className='object-property-expand'\n          onClick={onAddClick(schema)}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n"],"mappings":";AAAA,SAMEA,SAAS,EACTC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,OAAO,QACF,aAAa;AAEpB;;;;;;AAMA,eAAc,SAAUC,mBAAmBA,CAIzCC,KAAwC;EACxC,MAAM;IACJC,WAAW;IACXC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,UAAU;IACVC,UAAU;IACVC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,MAAM;IACNC,KAAK;IACLC;EAAQ,CACT,GAAGZ,KAAK;EACT,MAAMa,OAAO,GAAGhB,YAAY,CAAUe,QAAQ,CAAC;EAC/C,MAAME,kBAAkB,GAAGlB,WAAW,CAAgC,oBAAoB,EAAEY,QAAQ,EAAEK,OAAO,CAAC;EAC9G,MAAME,wBAAwB,GAAGnB,WAAW,CAC1C,0BAA0B,EAC1BY,QAAQ,EACRK,OAAO,CACR;EACD;EACA,MAAM;IACJG,eAAe,EAAE;MAAEC;IAAS;EAAE,CAC/B,GAAGT,QAAQ,CAACU,SAAS;EACtB,OACEC,KAAA;IAAUC,EAAE,EAAEhB,QAAQ,CAACiB,GAAG;IAAAC,QAAA,GACvBX,KAAK,IACJY,IAAA,CAACT,kBAAkB;MACjBM,EAAE,EAAEtB,OAAO,CAAIM,QAAQ,CAAC;MACxBO,KAAK,EAAEA,KAAK;MACZF,QAAQ,EAAEA,QAAQ;MAClBC,MAAM,EAAEA,MAAM;MACdE,QAAQ,EAAEA,QAAQ;MAClBJ,QAAQ,EAAEA;IAAQ,EAErB,EACAP,WAAW,IACVsB,IAAA,CAACR,wBAAwB;MACvBK,EAAE,EAAEzB,aAAa,CAAIS,QAAQ,CAAC;MAC9BH,WAAW,EAAEA,WAAW;MACxBS,MAAM,EAAEA,MAAM;MACdE,QAAQ,EAAEA,QAAQ;MAClBJ,QAAQ,EAAEA;IAAQ,EAErB,EACAF,UAAU,CAACkB,GAAG,CAAEC,IAAqC,IAAKA,IAAI,CAACC,OAAO,CAAC,EACvEhC,SAAS,CAAUgB,MAAM,EAAEE,QAAQ,EAAET,QAAQ,CAAC,IAC7CoB,IAAA,CAACN,SAAS;MACRU,SAAS,EAAC,wBAAwB;MAClCC,OAAO,EAAEvB,UAAU,CAACK,MAAM,CAAC;MAC3BR,QAAQ,EAAEA,QAAQ,IAAIK,QAAQ;MAC9BK,QAAQ,EAAEA,QAAQ;MAClBJ,QAAQ,EAAEA;IAAQ,EAErB;EAAA,EACQ;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}