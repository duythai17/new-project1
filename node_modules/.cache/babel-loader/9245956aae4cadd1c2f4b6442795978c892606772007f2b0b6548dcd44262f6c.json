{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { TranslatableString } from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n/** The `UnsupportedField` component is used to render a field in the schema is one that is not supported by\n * react-jsonschema-form.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction UnsupportedField(props) {\n  const {\n    schema,\n    idSchema,\n    reason,\n    registry\n  } = props;\n  const {\n    translateString\n  } = registry;\n  let translateEnum = TranslatableString.UnsupportedField;\n  const translateParams = [];\n  if (idSchema && idSchema.$id) {\n    translateEnum = TranslatableString.UnsupportedFieldWithId;\n    translateParams.push(idSchema.$id);\n  }\n  if (reason) {\n    translateEnum = translateEnum === TranslatableString.UnsupportedField ? TranslatableString.UnsupportedFieldWithReason : TranslatableString.UnsupportedFieldWithIdAndReason;\n    translateParams.push(reason);\n  }\n  return _jsxs(\"div\", {\n    className: 'unsupported-field',\n    children: [_jsx(\"p\", {\n      children: _jsx(Markdown, {\n        children: translateString(translateEnum, translateParams)\n      })\n    }), schema && _jsx(\"pre\", {\n      children: JSON.stringify(schema, null, 2)\n    })]\n  });\n}\nexport default UnsupportedField;","map":{"version":3,"names":["TranslatableString","Markdown","UnsupportedField","props","schema","idSchema","reason","registry","translateString","translateEnum","translateParams","$id","UnsupportedFieldWithId","push","UnsupportedFieldWithReason","UnsupportedFieldWithIdAndReason","_jsxs","className","children","_jsx","JSON","stringify"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\core\\src\\components\\templates\\UnsupportedField.tsx"],"sourcesContent":["import { FormContextType, RJSFSchema, StrictRJSFSchema, TranslatableString, UnsupportedFieldProps } from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n\n/** The `UnsupportedField` component is used to render a field in the schema is one that is not supported by\n * react-jsonschema-form.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction UnsupportedField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: UnsupportedFieldProps<T, S, F>\n) {\n  const { schema, idSchema, reason, registry } = props;\n  const { translateString } = registry;\n  let translateEnum: TranslatableString = TranslatableString.UnsupportedField;\n  const translateParams: string[] = [];\n  if (idSchema && idSchema.$id) {\n    translateEnum = TranslatableString.UnsupportedFieldWithId;\n    translateParams.push(idSchema.$id);\n  }\n  if (reason) {\n    translateEnum =\n      translateEnum === TranslatableString.UnsupportedField\n        ? TranslatableString.UnsupportedFieldWithReason\n        : TranslatableString.UnsupportedFieldWithIdAndReason;\n    translateParams.push(reason);\n  }\n  return (\n    <div className='unsupported-field'>\n      <p>\n        <Markdown>{translateString(translateEnum, translateParams)}</Markdown>\n      </p>\n      {schema && <pre>{JSON.stringify(schema, null, 2)}</pre>}\n    </div>\n  );\n}\n\nexport default UnsupportedField;\n"],"mappings":";AAAA,SAAwDA,kBAAkB,QAA+B,aAAa;AACtH,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC;;;;;AAKA,SAASC,gBAAgBA,CACvBC,KAAqC;EAErC,MAAM;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAQ,CAAE,GAAGJ,KAAK;EACpD,MAAM;IAAEK;EAAe,CAAE,GAAGD,QAAQ;EACpC,IAAIE,aAAa,GAAuBT,kBAAkB,CAACE,gBAAgB;EAC3E,MAAMQ,eAAe,GAAa,EAAE;EACpC,IAAIL,QAAQ,IAAIA,QAAQ,CAACM,GAAG,EAAE;IAC5BF,aAAa,GAAGT,kBAAkB,CAACY,sBAAsB;IACzDF,eAAe,CAACG,IAAI,CAACR,QAAQ,CAACM,GAAG,CAAC;;EAEpC,IAAIL,MAAM,EAAE;IACVG,aAAa,GACXA,aAAa,KAAKT,kBAAkB,CAACE,gBAAgB,GACjDF,kBAAkB,CAACc,0BAA0B,GAC7Cd,kBAAkB,CAACe,+BAA+B;IACxDL,eAAe,CAACG,IAAI,CAACP,MAAM,CAAC;;EAE9B,OACEU,KAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,GAChCC,IAAA;MAAAD,QAAA,EACEC,IAAA,CAAClB,QAAQ;QAAAiB,QAAA,EAAEV,eAAe,CAACC,aAAa,EAAEC,eAAe;MAAC;IAAY,EACpE,EACHN,MAAM,IAAIe,IAAA;MAAAD,QAAA,EAAME,IAAI,CAACC,SAAS,CAACjB,MAAM,EAAE,IAAI,EAAE,CAAC;IAAC,EAAO;EAAA,EACnD;AAEV;AAEA,eAAeF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}