{"ast":null,"code":"import AJV8Validator from './validator';\n/** Creates and returns a customized implementation of the `ValidatorType` with the given customization `options` if\n * provided. If a `localizer` is provided, it is used to translate the messages generated by the underlying AJV\n * validation.\n *\n * @param [options={}] - The `CustomValidatorOptionsType` options that are used to create the `ValidatorType` instance\n * @param [localizer] - If provided, is used to localize a list of Ajv `ErrorObject`s\n * @returns - The custom validator implementation resulting from the set of parameters provided\n */\nexport default function customizeValidator(options = {}, localizer) {\n  return new AJV8Validator(options, localizer);\n}","map":{"version":3,"names":["AJV8Validator","customizeValidator","options","localizer"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\validator-ajv8\\src\\customizeValidator.ts"],"sourcesContent":["import { FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport { CustomValidatorOptionsType, Localizer } from './types';\nimport AJV8Validator from './validator';\n\n/** Creates and returns a customized implementation of the `ValidatorType` with the given customization `options` if\n * provided. If a `localizer` is provided, it is used to translate the messages generated by the underlying AJV\n * validation.\n *\n * @param [options={}] - The `CustomValidatorOptionsType` options that are used to create the `ValidatorType` instance\n * @param [localizer] - If provided, is used to localize a list of Ajv `ErrorObject`s\n * @returns - The custom validator implementation resulting from the set of parameters provided\n */\nexport default function customizeValidator<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(options: CustomValidatorOptionsType = {}, localizer?: Localizer) {\n  return new AJV8Validator<T, S, F>(options, localizer);\n}\n"],"mappings":"AAGA,OAAOA,aAAa,MAAM,aAAa;AAEvC;;;;;;;;AAQA,eAAc,SAAUC,kBAAkBA,CAIxCC,OAAA,GAAsC,EAAE,EAAEC,SAAqB;EAC/D,OAAO,IAAIH,aAAa,CAAUE,OAAO,EAAEC,SAAS,CAAC;AACvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}