{"ast":null,"code":"import isEqualWith from 'lodash/isEqualWith';\n/** Implements a deep equals using the `lodash.isEqualWith` function, that provides a customized comparator that\n * assumes all functions are equivalent.\n *\n * @param a - The first element to compare\n * @param b - The second element to compare\n * @returns - True if the `a` and `b` are deeply equal, false otherwise\n */\nexport default function deepEquals(a, b) {\n  return isEqualWith(a, b, (obj, other) => {\n    if (typeof obj === 'function' && typeof other === 'function') {\n      // Assume all functions are equivalent\n      // see https://github.com/rjsf-team/react-jsonschema-form/issues/255\n      return true;\n    }\n    return undefined; // fallback to default isEquals behavior\n  });\n}","map":{"version":3,"names":["isEqualWith","deepEquals","a","b","obj","other","undefined"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\utils\\src\\deepEquals.ts"],"sourcesContent":["import isEqualWith from 'lodash/isEqualWith';\n\n/** Implements a deep equals using the `lodash.isEqualWith` function, that provides a customized comparator that\n * assumes all functions are equivalent.\n *\n * @param a - The first element to compare\n * @param b - The second element to compare\n * @returns - True if the `a` and `b` are deeply equal, false otherwise\n */\nexport default function deepEquals(a: any, b: any): boolean {\n  return isEqualWith(a, b, (obj: any, other: any) => {\n    if (typeof obj === 'function' && typeof other === 'function') {\n      // Assume all functions are equivalent\n      // see https://github.com/rjsf-team/react-jsonschema-form/issues/255\n      return true;\n    }\n    return undefined; // fallback to default isEquals behavior\n  });\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,oBAAoB;AAE5C;;;;;;;AAOA,eAAc,SAAUC,UAAUA,CAACC,CAAM,EAAEC,CAAM;EAC/C,OAAOH,WAAW,CAACE,CAAC,EAAEC,CAAC,EAAE,CAACC,GAAQ,EAAEC,KAAU,KAAI;IAChD,IAAI,OAAOD,GAAG,KAAK,UAAU,IAAI,OAAOC,KAAK,KAAK,UAAU,EAAE;MAC5D;MACA;MACA,OAAO,IAAI;;IAEb,OAAOC,SAAS,CAAC,CAAC;EACpB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}