{"ast":null,"code":"import AJV8PrecompiledValidator from './precompiledValidator';\n/** Creates and returns a `ValidatorType` interface that is implemented with a precompiled validator. If a `localizer`\n * is provided, it is used to translate the messages generated by the underlying AJV validation.\n *\n * NOTE: The `validateFns` parameter is an object obtained by importing from a precompiled validation file created via\n * the `compileSchemaValidators()` function.\n *\n * @param validateFns - The map of the validation functions that are created by the `compileSchemaValidators()` function\n * @param rootSchema - The root schema that was used with the `compileSchemaValidators()` function\n * @param [localizer] - If provided, is used to localize a list of Ajv `ErrorObject`s\n * @returns - The precompiled validator implementation resulting from the set of parameters provided\n */\nexport default function createPrecompiledValidator(validateFns, rootSchema, localizer) {\n  return new AJV8PrecompiledValidator(validateFns, rootSchema, localizer);\n}","map":{"version":3,"names":["AJV8PrecompiledValidator","createPrecompiledValidator","validateFns","rootSchema","localizer"],"sources":["D:\\Reactjs\\my-app\\node_modules\\@rjsf\\validator-ajv8\\src\\createPrecompiledValidator.ts"],"sourcesContent":["import { FormContextType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '@rjsf/utils';\n\nimport { Localizer, ValidatorFunctions } from './types';\nimport AJV8PrecompiledValidator from './precompiledValidator';\n\n/** Creates and returns a `ValidatorType` interface that is implemented with a precompiled validator. If a `localizer`\n * is provided, it is used to translate the messages generated by the underlying AJV validation.\n *\n * NOTE: The `validateFns` parameter is an object obtained by importing from a precompiled validation file created via\n * the `compileSchemaValidators()` function.\n *\n * @param validateFns - The map of the validation functions that are created by the `compileSchemaValidators()` function\n * @param rootSchema - The root schema that was used with the `compileSchemaValidators()` function\n * @param [localizer] - If provided, is used to localize a list of Ajv `ErrorObject`s\n * @returns - The precompiled validator implementation resulting from the set of parameters provided\n */\nexport default function createPrecompiledValidator<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(validateFns: ValidatorFunctions, rootSchema: S, localizer?: Localizer): ValidatorType<T, S, F> {\n  return new AJV8PrecompiledValidator<T, S, F>(validateFns, rootSchema, localizer);\n}\n"],"mappings":"AAGA,OAAOA,wBAAwB,MAAM,wBAAwB;AAE7D;;;;;;;;;;;AAWA,eAAc,SAAUC,0BAA0BA,CAIhDC,WAA+B,EAAEC,UAAa,EAAEC,SAAqB;EACrE,OAAO,IAAIJ,wBAAwB,CAAUE,WAAW,EAAEC,UAAU,EAAEC,SAAS,CAAC;AAClF"},"metadata":{},"sourceType":"module","externalDependencies":[]}